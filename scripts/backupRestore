#!/usr/bin/env perl

# global variables
@names = qw (.backup .backupDir backup backupDir);
$notesFile = "backup.notes";
$help = "Usage: $0 (n=X) file1 file2
X = 0 : latest version
X < 0 : latest - |X| version
X > 0 : version X\n";

sub restoreFile {
	my ($backup, $target) = @_;
	open (LISTING, "ls -alF $backup |") or die ("Couldn't get list");
	my ($list) = <LISTING>;
	chomp $list;
	my (@parts) = split (/\s+/, $list);
	print "Restoring $backup  dated  @parts[5..7]  to $target\n";
	if ($backup =~ m|([^/]*)$|) {
			$short = $1;
		}

	$comment = `grep $short: $dir/$notesFile`;
	$comment =~ s/$short:\s*//;
	print "$comment" if ($comment);
	print `cp $backup $target`;
    print "\n";
}

sub numberValue {
	my ($name) = @_;
	if ($name =~ /\.(-?\d+)$/) {
		$retval = $1;
	} else {
		$retval = 0;
	}
	return $retval;
}

die $help unless (@ARGV);

# find which directory to use
foreach (@names) {
	if (-d $_) {
		$dir = $_;
		last;
	}
}
die "None of @names are directories.  D'oh\n." unless ($dir);

@files = ();
$version = 0;
foreach $arg (@ARGV) {
	if ($arg =~ /^n=(\-?\d+)/i) {
		$version = $1;
	} elsif ($arg =~ /^-/) {
		print "argument $arg is not recognized\n";
	} else {
		push @files, $arg;
	}
} # foreach arg

die "You haven't specified any files.\n" unless (@files);

foreach $file (@files) {
	if ($version > 0) {
        # get the nth file
		$filename = "$dir/$file.$version";
		if (-e $filename) {
			restoreFile ($filename, $file);
		} else {
			print "Error: $filename does not exist\n";
		}
	} else {
        # get the nth LATEST file
		$num = @names = reverse 
			sort { numberValue($a) <=> numberValue($b)} glob  ("$dir/$file.*");
		die "No backup files of $file\n" if (! $num);
        my $vers = $version * -1;
		if ($vers > $num) {
			print "Error: There are not $vers versions of $file\n";
		} else {
            #print "file restored = $names[$vers]\n";
			restoreFile ($names[$vers], $file);
		}
	}
} # foreach file
